{"version":3,"sources":["views/Items.js","App.js","components/Header.js","components/About.js","components/HalfImage.js","components/Metadata.js","views/Item.js","views/NewItems.js","views/Update.js","serviceWorker.js","index.js","components/Navigation.js"],"names":["purp","backgroundColor","border","marginBottom","green","Items","this","props","items","map","item","i","key","id","className","to","title","author","style","onClick","deleteItem","Component","App","state","getItems","fetch","then","response","json","setState","catch","error","console","method","data","slice","log","Header","fontFamily","fontSize","paddingTop","HalfImage","height","src","images","alt","tombstone","minHeight","padding","href","data-toggle","role","accession_number","hidden","abstract","color","Item","getItem","match","params","window","location","replace","Metadata","rel","target","NewItems","formInputs","handleChange","event","updateInput","Object","assign","value","handleSubmit","preventDefault","body","JSON","stringify","headers","createdItem","onSubmit","htmlFor","type","onChange","Update","updateItem","e","myObj","formData","input","updatedItem","placeholder","Boolean","hostname","hist","createBrowserHistory","ReactDOM","render","history","activeStyle","path","exact","strict","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d38fc0a8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\n// import style from 'style.js';\n\nlet purp = {\n  backgroundColor: '#493843',\n  border: '.5px #fff solid',\n  marginBottom: '40px',\n}\nlet green = {\n  backgroundColor: '#C4D425',\n  border: '.5px #fff solid',\n  marginBottom: '40px',\n}\n\nclass Items extends Component {\n\n  render () {\n     return (\n       <div>\n         { this.props.items && this.props.items.map((item, i) => {\n             return  (\n               <div key={item.id} className=\"items text-center\">\n                   <Link to={`item/${item.id}`}><h3>{ item.title }</h3> by<h3> { item.author }</h3></Link>\n                   <Link to={`update/${item.id}`}><button style={green} className=\"btn-small btn-info\"> UPDATE </button></Link>\n                   <button className=\"btn-small btn-danger\" style={purp} onClick={() => this.props.deleteItem(item.id, i)}> DELETE </button>\n               </div>\n             )\n         })}\n       </div>\n     )\n   }\n }\n\n\nexport default Items;\n","import React, { Component } from 'react';\nimport Items from \"./views/Items.js\";\n// import Update from \"./components/Update.js\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nexport default class App extends Component {\n  state = {\n    items: false\n  }\n  componentDidMount() {\n    this.getItems();\n    console.log(\"got em\")\n  }\n  getItems = () =>{\n    fetch('https://lit-reef-53457.herokuapp.com/items')\n    .then(response => response.json())\n    .then(json => this.setState({items: json}))\n    .catch(error => console.error(error))\n  }\n\n  deleteItem = (id, i) =>{\n    fetch(\"https://lit-reef-53457.herokuapp.com/items/\" + id,\n      {\n        method: \"DELETE\"\n      })\n      .then(data => {\n        this.setState({\n          items: [\n            ...this.state.items.slice(0, i),\n            ...this.state.items.slice(i + 1)\n          ]\n        })\n      })\n    }\n  render () {\n    console.log(this.state.items)\n    return (\n      <div className=\"container\">\n        <>\n          <Items deleteItem={this.deleteItem} items={this.state.items} />\n        </>\n      </div>\n\n    )\n  }\n}\n","import React from \"react\";\n\nfunction Header() {\n  return (\n    <div className='header'>\n      <h1 className='text-center banner'>Skeuomorph</h1>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react'\nlet style = {\n  fontFamily: `'Zilla Slab', serif`,\n  fontSize: `1.25rem`,\n  paddingTop: '60px',\n}\nexport default function About (props) {\n  return (\n    <div className='container'>\n      <p className='col-sm-12' style={style}>\n      This is a React on Rails desktop app using Electron.js. It is designed to organize and catalog information about collections. Eventually, users will be able to export collections cataloged with this app to a publically accessible website.\n\n      </p>\n    </div>\n  )\n}\n","import React from 'react'\n\n\nexport default function HalfImage (props) {\n  return (\n    <div className='col-sm-5'>\n    <img className='img-fluid'\n      style= {{ height: 'auto' }}\n      src={ props.item.images }\n      alt={ props.item.title }\n      />\n    </div>\n  )\n}\n","import React from 'react';\n\nlet tombstone = {\n  // backgroundColor: '#b6b6b6',\n  // color: 'white',\n  minHeight: '200px',\n  padding: \"5px\",\n}\n\nexport default function  (props) {\n  return (\n      <div className='col-sm-7' style={tombstone} >\n        <ul className=\"nav nav-tabs nav-justified\">\n            <li className='nav-item'><a href=\"#info\" data-toggle=\"tab\" className=\"nav-link active\">INFO</a></li>\n            <li className='nav-item'><a href=\"#story\" data-toggle=\"tab\" className=\"nav-link\">STORY</a></li>\n            <li className='nav-item' id='cpu'><a href=\"#resources\" data-toggle=\"tab\" className=\"nav-link\">RESOURCES</a></li>\n        </ul>\n      <div className=\"tab-content\">\n          <div role=\"tabpanel\"  className=\"tab-pane active\"  id='info'>\n            <h3>Title: { props.item.title }</h3><br/>\n            <h3>Author: { props.item.author }</h3><br />\n            <p className='text-center'>The accession number is { props.item.accession_number }</p><br />\n          </div>\n          <div role=\"tabpanel\" className=\"tab-pane\" id=\"story\" hidden>\n            <p>{ props.item.abstract }</p>\n          </div>\n          <div role=\"tabpanel\" className=\"tab-pane\" id=\"resources\" hidden>\n          </div>\n      </div>\n      </div>\n  )\n}\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport HalfImage from \"../components/HalfImage.js\";\nimport Metadata from \"../components/Metadata.js\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\nlet purp = {\n  backgroundColor: '#493843',\n  border: '.5px #fff solid',\n}\nlet green = {\n  backgroundColor: '#C4D425',\n  border: '.5px #fff solid',\n  color: '#fff',\n}\n\n\nexport default class Item extends Component{\n  state = {\n    item: {}\n  }\n  componentDidMount (){\n    this.getItem();\n  }\n  getItem = () =>{\n    fetch('https://lit-reef-53457.herokuapp.com/items/' + this.props.match.params.id)\n    .then(response => response.json())\n    .then(json =>{\n      this.setState({item: json})\n      console.log(json)})\n    .catch(error => console.error(error))\n  }\n  getItems = () =>{\n    fetch('https://lit-reef-53457.herokuapp.com/items')\n    .then(response => response.json())\n    .then(json => this.setState({items: json}))\n    .catch(error => console.error(error))\n  }\n  deleteItem = (id) =>{\n    fetch(\"https://lit-reef-53457.herokuapp.com/items/\" + id,\n      {\n        method: \"DELETE\"\n      })\n      .then(() => {\n        fetch('https://lit-reef-53457.herokuapp.com/items')\n          .then(response => response.json())\n          .then(window.location.replace('/'))\n      })\n    }\n  render (){\n  return (\n    <div className='container'>\n    <div key={this.state.item.id} className=\"items\">\n    <div className='row'>\n      <Metadata item={this.state.item}/>\n      <HalfImage item={ this.state.item }/>\n    </div>\n    <div className=\"row\">\n      <div className=\"col-sm-7\">\n        <div className=\"col-sm-12 license\">\n          <p>This work is licensed under a <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\" target=\"_blank\" rel=\"noopener noreferrer\">Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License</a> Please credit the Providence Athenæum when using this content.</p>\n        </div>\n      </div>\n      <div className='col-sm-5 take-action'>\n        <button style={green} className=\"btn-large btn-warning\"><Link to={() =>`/update/${this.state.item.id}`}> UPDATE </Link></button>\n        <button style={purp} className=\"btn-large btn-danger\" onClick={() => this.deleteItem(this.state.item.id)}> DELETE </button>\n      </div>\n    </div>\n  </div>\n  </div>\n  )\n}\n}\n","import React, { Component } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass NewItems extends Component {\n  state = {\n    Items : [],\n    formInputs: {\n      title: \"\",\n      author: \"\",\n      accession_number: \"\",\n      images: \"\",\n      abstract: \"\"\n    }\n  }\n  componentDidMount() {\n    this.getItems();\n  }\n  getItems = () =>{\n    fetch('https://lit-reef-53457.herokuapp.com/items')\n    .then(response => response.json())\n    .then(json => this.setState({items: json}))\n    .catch(error => console.error(error))\n  }\n  handleChange = (event) => {\n    const updateInput = Object.assign( this.state.formInputs, { [event.target.id]: event.target.value })\n    this.setState(updateInput)\n  }\n  handleSubmit  = (event) =>{\n    event.preventDefault();\n    fetch(\"https://lit-reef-53457.herokuapp.com/items\", {\n      body: JSON.stringify(this.state.formInputs),\n      method: \"POST\",\n   headers: {\n     \"Accept\": \"application/json, text/plain, */*\",\n     \"Content-Type\": \"application/json\"\n   }\n })\n   .then(createdItem => createdItem.json())\n   .then((data) => { window.location.replace('/')})\n }\n\n  render () {\n    return (\n      <div className='container'>\n        <div className=\"contact-clean\">\n          <form onSubmit={this.handleSubmit}>\n              <h2 className=\"text-center\">New Items?</h2>\n              <div className=\"form-group\">\n              <label htmlFor=\"title\" >Title: </label>\n              <input\n                type=\"text\"\n                id=\"title\"\n                value={this.state.formInputs.title}\n                onChange={this.handleChange}\n              /></div>\n              <div className=\"form-group\">\n                <label htmlFor=\"author\">Author: </label>\n                <input\n                  type=\"text\"\n                  id=\"author\"\n                  value={this.state.formInputs.author}\n                  onChange={this.handleChange}\n                /></div>\n              <div className=\"form-group\">\n                <label htmlFor=\"accession_number\">Accession Number: </label>\n                  <input\n                    type=\"text\"\n                    id=\"accession_number\"\n                    value={this.state.formInputs.accession_number}\n                    onChange={this.handleChange}\n                  />\n              </div>\n              <div className=\"form-group\">\n              <label htmlFor=\"author\">Abstract: </label>\n              <input\n                type=\"text\"\n                id=\"abstract\"\n                value={this.state.formInputs.abstract}\n                onChange={this.handleChange}\n              /><br/>\n              </div>\n              <div className=\"form-group\">\n              <label htmlFor=\"author\">Images: </label>\n              <input\n                type=\"text\"\n                id=\"images\"\n                value={this.state.formInputs.images}\n                onChange={this.handleChange}\n              />\n              </div>\n              <div className=\"form-group\">\n              <input type=\"submit\" className=\"submit btn btn-warning\" />\n              </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default NewItems;\n","import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.css';\n\nexport default class Update extends Component{\n  state = {\n    item: {},\n    formInputs: {\n      title: \"\",\n      author: \"\",\n      accession_number: \"\",\n      images: \"\",\n      abstract: \"\"\n    }\n  }\n  componentDidMount (){\n    this.getItem();\n  }\n  getItem = () =>{\n    fetch('https://lit-reef-53457.herokuapp.com/items/' + this.props.match.params.id)\n    .then(response => response.json())\n    .then(json =>{\n      this.setState({item: json})\n    })\n  }\n  handleChange = (event) => {\n    const updateInput = Object.assign( this.state.formInputs, { [event.target.id]: event.target.value })\n    this.setState(updateInput)\n  }\n  updateItem = (e) => {\n    e.preventDefault();\n    const myObj = {...this.state.formInputs}\n    const formData = {}\n    for (let input in myObj){\n      if (myObj[input]){\n        formData[input] = myObj[input]\n      }\n    }\n    if(formData === null){\n      window.location.replace('/items');\n    } else {\n      fetch(`https://lit-reef-53457.herokuapp.com/items/` + this.state.item.id, {\n        body: JSON.stringify(formData),\n        method: 'PUT',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(updatedItem => updatedItem.json())\n      .then((data) => { window.location.replace('/items')})\n    }\n  }\n\n\n  render (){\n    return (\n      <nav>\n        <h3>Update { this.state.item.title } </h3>\n          <form onSubmit={this.updateItem}>\n            <label htmlFor=\"title\" >Title: </label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              value={this.state.formInputs.title}\n              placeholder={this.state.item.title}\n              onChange={this.handleChange}\n            /><br/>\n            <label htmlFor=\"author\">Author: </label>\n            <input\n              type=\"text\"\n              id=\"author\"\n              placeholder={this.state.item.author}\n              onChange={this.handleChange}\n            /><br/>\n            <label htmlFor=\"accession_number\">Accession Number: </label>\n            <input\n              type=\"text\"\n              id=\"accession_number\"\n              placeholder={this.state.item.accession_number}\n              onChange={this.handleChange}\n            /><br/>\n            <label htmlFor=\"author\">Abstract: </label>\n            <input\n              type=\"text\"\n              id=\"abstract\"\n              placeholder={this.state.item.abstract}\n              onChange={this.handleChange}\n            /><br/>\n            <label htmlFor=\"author\">Images: </label>\n            <input\n              type=\"text\"\n              id=\"images\"\n              placeholder={this.state.item.images}\n              onChange={this.handleChange}\n            /><br/>\n            <input type=\"submit\" className=\"submit btn btn-warning\" />\n          </form>\n        </nav>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport Route from \"react-router-dom/Route\";\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './main.css';\nimport App from './App.js';\nimport Header from \"./components/Header.js\";\nimport Home from \"./components/Home.js\";\nimport Navigation from \"./components/Navigation.js\";\nimport About from \"./components/About.js\";\nimport Item from \"./views/Item.js\";\nimport Items from \"./views/Items.js\";\nimport NewItems from \"./views/NewItems.js\";\nimport Update from \"./views/Update.js\";\n// import indexRoutes from \"./routes/indexRoutes.js\";\n\nimport * as serviceWorker from './serviceWorker';\n\nlet hist = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={hist}>\n    <div className='App'>\n    <Header />\n    <Navigation />\n    <Route path='/' exact strict component={ App } />\n    <Route path='/about' exact strict component={ About } />\n    <Route path='/items' exact strict component={ App } />\n    <Route path='/new-items' exact strict component={ NewItems } />\n    <Route path='/item/:id' exact strict component={ Item } />\n    <Route path='/update/:id' exact strict component={ Update } />\n      </div>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\nexport default function Navigation () {\n  return (\n    <nav className=\"navbar navbar-dark fixed-bottom\">\n      <div className=\"navbar-header navbar-expand-sm\">\n        <ul className=\"nav nav-pills\">\n          <li>\n          <NavLink to=\"/items\" activeStyle={{'color': 'lightgray'}}>Items</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/new-items\" activeStyle={{'color': 'lightgray'}}>New Item</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/about\" activeStyle={{'color': 'lightgray'}}>About</NavLink>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  )\n}\n\nNavigation.propTypes = {\n\n}\n"],"sourceRoot":""}